# See prebuild_dependencies_roadmap.md for the new multi-workflow, multi-arch build strategy.
# This workflow is now only for linting and sdist build checks. All wheel builds are handled in:
#   - build_wheels_linux.yml
#   - build_wheels_macos.yml
#   - build_wheels_windows.yml (future)

name: Build and Lint

on:
  push:
    branches: [ "main", "master" ] # Adjust branches as needed
  pull_request:
    branches: [ "main", "master" ] # Adjust branches as needed

# Add top-level permissions for least privilege
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.11" ] # Example Python versions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true # Important: checkout submodules

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build # For python -m build
        # Add linters/formatters if desired, e.g.:
        # pip install black flake8

    # Optional: Add linting/formatting steps here
    # - name: Run Black
    #   run: black --check .
    # - name: Run Flake8
    #   run: flake8 .

    - name: Build source distribution (placeholder)
      run: python -m build --sdist
      # This build command will likely fail until Phase 2 (custom build steps for libpostal) is complete.
      # We expect it to fail for now.

    # Optional: Upload sdist artifact
    # - name: Upload sdist artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: sdist-${{ matrix.python-version }}
    #     path: dist/*.tar.gz