name: Build Wheels (Linux)

on:
  push:
    branches: [ "main", "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
  schedule:
    - cron: "0 12 1 * *"

env: # Define common vars at workflow level
  CIBW_BUILD_COMMON: "cp311-* cp312-*"
  CIBW_SKIP_COMMON: "pp* *-musllinux_* cp37-win*"
  CIBW_TEST_COMMAND_COMMON: "python {project}/scripts/test_wheel.py"
  CIBW_BUILD_VERBOSITY_COMMON: "1"

jobs:
  build_wheels_linux:
    name: Build wheels on Linux (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            cibw_archs: "x86_64"
          - os: ubuntu-22.04-arm
            arch: aarch64
            cibw_archs: "aarch64"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get libpostal submodule commit hash
        id: get_submodule_hash
        shell: bash
        run: |
          HASH=$(git submodule status vendor/libpostal | awk '{ sub(/^[+-]?/, ""); print $1 }')
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      #      - name: Cache compiled libpostal library
      #        uses: actions/cache@v4
      #        id: cache-libpostal
      #        with:
      #          path: build/libpostal_install_cache
      #          key: linux-${{ matrix.arch }}-libpostal-cache-v2-${{ steps.get_submodule_hash.outputs.hash }}
      #          restore-keys: |
      #            linux-${{ matrix.arch }}-libpostal-cache-v2-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip and install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel

      # Create an explicit bash script to execute inside the container
      #      - name: Create copy script
      #        run: |
      #          cat > copy_cache.sh << 'EOF'
      #          #!/bin/bash
      #          set -ex
      #          \n
      #          # Print build directory content for debugging
      #          echo "Container build directory content:"
      #          ls -la build/ || echo "No build directory"
      #          \n
      #          CACHE_DIR="build/libpostal_install_cache"
      #          if [ -d "$CACHE_DIR" ]; then
      #            echo "Found cache directory at $CACHE_DIR"
      #            mkdir -p "/host$CACHE_DIR"
      #            ls -la "$CACHE_DIR" || echo "Empty cache directory"
      #            find "$CACHE_DIR" -type d -exec ls -la {} \; || echo "No directories found"
      #            \n
      #            # Copy all files, creating directories as needed
      #            cp -r "$CACHE_DIR"/* "/host$CACHE_DIR/" || echo "Copy failed"
      #            \n
      #            echo "After copy to host:"
      #            ls -la "/host$CACHE_DIR/" || echo "Empty host cache directory"
      #          else
      #            echo "Cache directory $CACHE_DIR not found"
      #          fi
      #          EOF
      #          chmod +x copy_cache.sh

      #      - name: Ensure cache directory exists
      #        shell: bash
      #        run: mkdir -p build/libpostal_install_cache

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          # Reference workflow-level vars and add specific ones
          CIBW_BUILD: ${{ env.CIBW_BUILD_COMMON }}
          CIBW_SKIP: ${{ env.CIBW_SKIP_COMMON }}
          CIBW_BUILD_VERBOSITY: ${{ env.CIBW_BUILD_VERBOSITY_COMMON }}
          CIBW_TEST_COMMAND: ${{ env.CIBW_TEST_COMMAND_COMMON }}
          CIBW_BEFORE_BUILD_LINUX: >
            dnf install -y autoconf automake libtool pkgconfig curl perl-IPC-Cmd
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
        with:
          output-dir: wheelhouse

      #      - name: Verify cache contents after build
      #        run: |
      #          echo "=== Cache directory structure after build ==="
      #          find build/libpostal_install_cache -type d | sort
      #          echo "=== Cache file sizes after build ==="
      #          find build/libpostal_install_cache -type f -name "*.a" -exec ls -lh {} \; || echo "No .a files found"
      #          du -sh build/libpostal_install_cache/* || echo "No subdirectories found"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
