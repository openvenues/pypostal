# pypostal/.github/workflows/codeql-analysis.yml
name: "CodeQL Analysis"

on:
  push:
    branches: [ "main", "master", "slop/pre_build_library" ] # Added "master" branch explicitly
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main", "master", "slop/pre_build_library" ]
  schedule:
    - cron: '30 1 * * 0' # Run weekly on Sunday at 01:30 UTC

permissions:
  security-events: write # Required for CodeQL to write results

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    # Runner size is larger by default. If needing different size, add 'runs-on: [ubuntu-latest, size: large]' (or self-hosted).
    # If using Windows self-hosted runners, add 'runs-on: [windows-latest, self-hosted]'
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }} # Use ubuntu as default, macOS for swift (though not used here)
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read # for github/codeql-action/init to get workflow details
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/analyze to upload results

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'cpp' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'python' and 'cpp' for this project

    steps:
    - name: Checkout repository
      # Checks out the pypostal repository where this workflow resides
      uses: actions/checkout@v4
      with:
        submodules: true # Important: Fetch the vendor/libpostal submodule
        fetch-depth: 0 # Fetch all history for all branches and tags

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality # Use a standard query suite
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # queries: security-extended,security-and-quality

    # Install dependencies for C/C++ build (only needed for the 'cpp' matrix entry)
    - name: Install C/C++ Build Dependencies (Linux)
      if: matrix.language == 'cpp' && runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y autoconf automake libtool pkg-config curl

    # Set up Python for setup.py (needed for both Python and C/C++ analysis)
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Use a recent version

    # Install Python dependencies
    - name: Install Python Dependencies
      if: matrix.language == 'python'
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # MANUAL BUILD STEPS for C/C++ instead of Autobuild
    - name: Manual C/C++ Build Steps
      if: matrix.language == 'cpp'
      run: |
        # Build libpostal from vendor directory
        cd vendor/libpostal
        ./bootstrap.sh
        
        # Configure with appropriate flags
        ./configure --disable-data-download --prefix=/tmp/libpostal_install
        
        # Build libpostal
        make -j$(nproc)
        make install
        
        # Return to pypostal root
        cd ../../
        
        # Install pip dependencies
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel
        
        # Build the Python extension which will compile the C files
        # This ensures all C code gets analyzed
        python setup.py build_ext --inplace

    # Autobuild for Python only
    - name: Autobuild for Python
      if: matrix.language == 'python'
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true # Ensure results are uploaded