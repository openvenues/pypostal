# DISABLED: This workflow is now superseded by build_wheels_linux.yml and build_wheels_macos.yml.
# To re-enable, restore the 'on:' section below.
# on:
#   push:
#     branches: [ "main", "master"]
#     tags:
#       - 'v*'
#   pull_request:
#     branches: [ "main", "master" ]
#   workflow_dispatch:
#   schedule:
#     - cron: "0 12 1 * *"

# jobs:
#   build_wheels:
#     name: Build wheels on ${{ matrix.os }} (${{ matrix.arch || 'native' }})
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         # Define specific combinations for Linux, keep macOS simple
#         include:
#           - os: ubuntu-latest
#             arch: x86_64
#             cibw_archs: "x86_64"
#           - os: ubuntu-22.04-arm
#             arch: aarch64
#             cibw_archs: "aarch64"
#           - os: macos-latest
#             arch: arm64
#             cibw_archs: "arm64"
#           - os: macos-latest
#             arch: x86_64
#             cibw_archs: "x86_64"
#           - os: macos-latest
#             arch: universal2
#             cibw_archs: "universal2"
#           # - os: windows-latest # Add back if/when needed
#           #   arch: AMD64
#           #   cibw_archs: "AMD64"

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#         with:
#           submodules: true # Fetch the libpostal submodule

#       # --- QEMU step is removed --- #

#       # --- Add steps for caching the compiled libpostal --- #
#       - name: Get libpostal submodule commit hash
#         id: get_submodule_hash
#         # Run in shell that supports pipelines and awk
#         shell: bash 
#         run: |
#           # Need to cd into pypostal if workflow CWD is workspace root
#           # cd pypostal # Remove this line, CWD should be repo root
#           # Extract the commit hash (remove leading +/-, take first field)
#           HASH=$(git submodule status vendor/libpostal | awk '{ sub(/^[+-]?/, ""); print $1 }')
#           echo "hash=$HASH" >> $GITHUB_OUTPUT

#       - name: Cache compiled libpostal library
#         uses: actions/cache@v4
#         with:
#           # Cache the directory containing arch-specific builds
#           # Path is relative to the repository root where setup.py runs
#           path: build/libpostal_install_cache
#           # Key includes OS, architecture, and the submodule hash
#           key: ${{ matrix.os }}-${{ matrix.arch }}-libpostal-cache-${{ steps.get_submodule_hash.outputs.hash }}
#           # Restore key prefix in case of exact miss
#           restore-keys: |
#             ${{ matrix.os }}-${{ matrix.arch }}-libpostal-cache-
#       # -------------------------------------------------- #
      
#       # Ensure the base directory for the cache exists before cibuildwheel runs
#       - name: Ensure cache directory exists
#         shell: bash # Use bash for consistency across runners
#         run: mkdir -p build/libpostal_install_cache

#       # Windows Specific Setup: Install MSYS2 and required tools
#       # Note: This step will only run if/when windows-latest is added back to the matrix
#       - name: Set up MSYS2 (Windows)
#         if: runner.os == 'Windows'
#         uses: msys2/setup-msys2@v2
#         with:
#           msystem: MINGW64 # Or other environments like MSYS if needed
#           update: true
#           install: >- # Using multiline string for clarity
#             mingw-w64-x86_64-toolchain
#             autoconf
#             automake
#             libtool
#             pkg-config
#             curl
#             make 
#           # Note: automake-wrapper is often needed on MSYS2

#       - name: Build wheels
#         uses: pypa/cibuildwheel@v2.17.0 # Use a recent version
#         env:
#           # Only build for the two latest CPython versions (3.11 and 3.12)
#           CIBW_BUILD: "cp311-* cp312-*"
#           # Configure CIBW_BEFORE_BUILD_* for platform-specific dependency installation
#           CIBW_BEFORE_BUILD_LINUX: "dnf install -y autoconf automake libtool pkgconfig curl perl-IPC-Cmd"
#           CIBW_BEFORE_BUILD_MACOS: "brew install autoconf automake libtool pkg-config curl"
#           CIBW_BEFORE_BUILD_WINDOWS: ""
#           CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
#           CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
#           CIBW_ENVIRONMENT_WINDOWS: >
#             PATH="C:\Windows\System32;C:\msys64\usr\bin;C:\msys64\mingw64\bin;{env_path}"
#           CIBW_ARCHS: ${{ matrix.cibw_archs }}
#           CIBW_SKIP: "pp* *-musllinux_* cp37-win*"
#           CIBW_BUILD_VERBOSITY: "1"
#           CIBW_TEST_COMMAND: "python -c \"import os; print('Testing postal import...'); import postal; print(f'postal imported successfully. __file__={postal.__file__}')\""
#         with:
#           # Output directory for wheels
#           output-dir: wheelhouse
#           # Specify packages to build if pyproject.toml is not in root
#           # package-dir: . # Assumes setup.py is in the root of pypostal

#       - name: Upload wheels
#         uses: actions/upload-artifact@v4
#         with:
#           # Include OS and Arch in artifact name for clarity
#           name: wheels-${{ matrix.os }}-${{ matrix.arch }}
#           path: ./wheelhouse/*.whl